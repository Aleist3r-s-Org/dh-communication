import { EmptyPrereqs, EmptySpellArray, SetChoiceNode, SetTalentNode, SpecTabs } from "../TalentTreeLoader"

export function ReloadShamanTree() {
    let TAB: uint32 = 57

    QueryWorld(`Delete from forge_talents where talentTabId = ${TAB}`)
    QueryWorld(`Delete from forge_talent_prereq where talentTabId = ${TAB}`)
    QueryWorld(`Delete from forge_talent_ranks where talentTabId = ${TAB}`)
    QueryWorld(`Delete from forge_talent_unlearn where talentTabId = ${TAB}`)

    let Talent : uint32 = GetID(`Spell`, 'dh-spells', `sha-gen-chainheal`)
    SetTalentNode(Talent, TAB, 3, 1, 0, false, 1 << (SpecTabs.RSHA-1), CreateArray<uint32>([Talent]), EmptyPrereqs, EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-astralshift`)
    SetTalentNode(Talent, TAB, 5, 1, 0, false, 1 << (SpecTabs.WARD-1), CreateArray<uint32>([Talent]), EmptyPrereqs, EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-lavaburst`)
    SetTalentNode(Talent, TAB, 7, 1, 0, false, 1 << (SpecTabs.ENHA-1), CreateArray<uint32>([Talent]), EmptyPrereqs, EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-chainlightning`)
    SetTalentNode(Talent, TAB, 9, 1, 0, false, 1 << (SpecTabs.ELEM-1), CreateArray<uint32>([Talent]), EmptyPrereqs, EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-waterscalmingpresence`)
    SetTalentNode(Talent, TAB, 3, 2, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-chainheal`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-brimmingwithlife`)
    SetTalentNode(Talent, TAB, 4, 2, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-chainheal`)]: 1, [GetID(`Spell`, `dh-spells`, `sha-gen-astralshift`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-planestraveller`)
    SetChoiceNode(Talent, TAB, 5, 2, 0, true, CreateArray<uint32>([Talent, GetID(`Spell`, `dh-spells`, `sha-gen-astralbulwark`)]), CreateDictionary<uint32, uint8>({[GetID('Spell', 'dh-spells', 'sha-gen-astralshift')]: 1}), EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-flameandice`)
    SetTalentNode(Talent, TAB, 7, 2, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-lavaburst`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-reverberation`)
    SetTalentNode(Talent, TAB, 8, 2, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-lavaburst`)]: 1, [GetID(`Spell`, `dh-spells`, `sha-gen-chainlightning`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-maelstromweapon`)
    SetTalentNode(Talent, TAB, 9, 2, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-chainlightning`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-earthsdefense`)
    SetTalentNode(Talent, TAB, 4, 3, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-waterscalmingpresence`)]: 1, [GetID(`Spell`, `dh-spells`, `sha-gen-brimmingwithlife`)]: 1, [GetID(`Spell`, `dh-spells`, `sha-gen-planestraveller`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-naturesfury`)
    SetTalentNode(Talent, TAB, 6, 3, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-planestraveller`)]: 1, [GetID(`Spell`, `dh-spells`, `sha-gen-flameandice`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-electrifiedpurge`)
    SetChoiceNode(Talent, TAB, 8, 3, 0, true, CreateArray<uint32>([Talent, GetID(`Spell`, `dh-spells`, `sha-gen-greaterpurge`)]), CreateDictionary<uint32, uint8>({[GetID('Spell', 'dh-spells', 'sha-gen-flameandice')]: 1, [GetID('Spell', 'dh-spells', 'sha-gen-reverberation')]: 1, [GetID('Spell', 'dh-spells', 'sha-gen-maelstromweapon')]: 1}), EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-elementalfocus`)
    SetTalentNode(Talent, TAB, 3, 4, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-earthsdefense`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-elementalwarding`)
    SetTalentNode(Talent, TAB, 5, 4, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-planestraveller`)]: 1, [GetID(`Spell`, `dh-spells`, `sha-gen-earthsdefense`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-airscelerity`)
    SetTalentNode(Talent, TAB, 7, 4, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-electrifiedpurge`)]: 1, [GetID(`Spell`, `dh-spells`, `sha-gen-flameandice`)]: 1}), EmptySpellArray, EmptySpellArray)
    Talent = GetID(`Spell`, `dh-spells`, `sha-gen-flurry`)
    SetTalentNode(Talent, TAB, 9, 4, 0, true, 0, CreateArray<uint32>([Talent]), CreateDictionary<uint32, uint8>({[GetID(`Spell`, `dh-spells`, `sha-gen-electrifiedpurge`)]: 1}), EmptySpellArray, EmptySpellArray)
}
